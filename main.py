import telebot
import webbrowser
from telebot import types
import sqlite3
bot = telebot.TeleBot('6128166293:AAEB6OzAhR3YgXpp0wK1QLZIZBYXytCKdEA')
name = None


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ, –∞—É–¥–∏–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
@bot.message_handler(content_types=['photo'])
def photo(message):
    bot.reply_to(message, f'–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ, {message.from_user.first_name}!')
@bot.message_handler(content_types=['audio'])
def audio(message):
    bot.reply_to(message, f'–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–¥–∞–º —ç—Ç–æ –∞—É–¥–∏–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, {message.from_user.first_name}!')
@bot.message_handler(content_types=['document'])
def document(message):
    bot.reply_to(message, f'–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–¥–∞–º —ç—Ç–æ—Ç —Ñ–∞–π–ª —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, {message.from_user.first_name}!')

# –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–∞–π—Ç–∞ –≤ –º–µ–Ω—é
@bot.message_handler(commands=['site'])
def site(message):
    webbrowser.open('https://youtube.com')


@bot.message_handler(commands=['start'])
def main(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', callback_data='site')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', callback_data='ask')
    btn3 = types.InlineKeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='register')
    markup.row(btn2, btn3)
    btn4 = types.InlineKeyboardButton('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data='help')
    markup.row(btn4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}', reply_markup=markup)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    match callback.data:
        case 'site':
            webbrowser.open('https://youtube.com')
        case 'ask':
            bot.send_message(callback.message.chat.id, '–° —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã!')
        case 'register':
            bot.send_message(callback.message.chat.id, f'–î–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–±—è –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ!')
        case 'help':
            markup = types.InlineKeyboardMarkup()
            qstn1 = types.InlineKeyboardButton('–î–ª—è —á–µ–≥–æ —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞?', callback_data='qstn1')
            markup.row(qstn1)
            qstn2 = types.InlineKeyboardButton('–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã', callback_data='qstn2')
            markup.row(qstn2)
            qstn3 = types.InlineKeyboardButton('–ó–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —è –Ω–∞–π–¥—É —Ä–∞–±–æ—Ç—É?', callback_data='qstn3')
            markup.row(qstn3)
            qstn4 = types.InlineKeyboardButton('–ö–æ–º–ø–∞–Ω–∏–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º', callback_data='qstn4')
            markup.row(qstn4)
            qstn5 = types.InlineKeyboardButton('–ü–ª–∞—Ç–Ω–∞—è –ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞?', callback_data='qstn5')
            markup.row(qstn5)
            bot.send_message(callback.message.chat.id, '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    match callback.data:
        case 'qstn1':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', callback_data='site')
            btn3 = types.InlineKeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='register')
            markup.row(btn1, btn3)
            bot.send_message(callback.message.chat.id, 'EASYJOB - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –ª–µ–≥–∫–∏–π –ø–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –≤ –≤–∞—à—É –∫–æ–º–∞–Ω–¥—Éü§ì '
                                 '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ 3 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –¥–∏–∑–∞–π–Ω –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. '
                                 '–ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –±–æ–ª—å—à–æ–π —Å–µ–º—å–µ!', reply_markup=markup)
        case 'qstn2':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='about_sphere1')
            btn2 = types.InlineKeyboardButton('–î–∏–∑–∞–π–Ω', callback_data='about_sphere2')
            btn3 = types.InlineKeyboardButton('–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', callback_data='about_sphere3')
            markup.row(btn1, btn2, btn3)
            bot.send_message(callback.message.chat.id, '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ 3 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –¥–∏–∑–∞–π–Ω –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. –û –∫–∞–∫–∏—Ö —Ç–µ–±–µ –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?', reply_markup=markup)
        case 'qstn3':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', callback_data='site')
            markup.row(btn1)
            bot.send_message(callback.message.chat.id, '–ù–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –º–æ–∂–Ω–æ –∑–∞ 15 –º–∏–Ω—É—Ç!', reply_markup=markup)
        case 'qstn4':
            bot.send_message(callback.message.chat.id, '–ü–æ–º–∏–º–æ —á–∞—Å—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –º—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Ç–∞–∫–∂–µ —Å –∫—Ä—É–ø–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏, –∫–∞–∫: ASUS, –ê—à–∞–Ω, Sofoil –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ')
        case 'qstn5':
            bot.send_message(callback.message.chat.id, '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è. –ú—ã –ø–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å–≥–∏ —Å —Ä–µ–∫–ª–∞–º—ã, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ–π –Ω–∞ —Å–∞–π—Ç–µ.')

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler()
def info(message):
    match message.text.lower():
        case '–ø—Ä–∏–≤–µ—Ç':
            bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}')
        case 'id':
            bot.reply_to(message, f'–í–∞—à ID: {message.from_user.id}')
        case '—Å–∞–π—Ç':
            bot.reply_to(message, 'https://youtube.com')
        case ('–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' | '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'):
            bot.reply_to(message, '–î–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–±—è')
        case ('–¥–ª—è —á–µ–≥–æ —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞?' | '–¥–ª—è —á–µ–≥–æ —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞' | '–∑–∞—á–µ–º –º–Ω–µ —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞' | '—á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å'):
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', callback_data='site')
            btn3 = types.InlineKeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='register')
            markup.row(btn1, btn3)
            bot.reply_to(message,'EASYJOB - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –ª–µ–≥–∫–∏–π –ø–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –≤ –≤–∞—à—É –∫–æ–º–∞–Ω–¥—Éü§ì '
                                 '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ 3 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –¥–∏–∑–∞–π–Ω –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ. '
                                 '–ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –±–æ–ª—å—à–æ–π —Å–µ–º—å–µ!',
                         reply_markup=markup)
        # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏
        case _:
            bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


# –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
bot.polling(none_stop=True)


'''
@bot.message_handler(commands=['button'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(item1)
    bot.send_message(message.chat, id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def message_reply(message):
    if message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        bot.send_message(message.chat.id, "https://youtube.com")


'''

'''
# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}')
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.InlineKeyboardMarkup('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
    # —Å–æ–∑–¥–∞–µ–º —Ä—è–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    #markup.add(btn1)
    #btn2 = types.KeyboardButton('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
    #btn3 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç')
    #markup.add(btn2)
    #markup.add(btn3)
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ç–æ —Å –º–µ—Ç–æ–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏—è rb - read
    # file = open('./logo.jpg', 'rb')
    # bot.send_photo(message.chat.id, file, reply_markup=markup)
    # bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç', reply_markup=markup)
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
    bot.register_next_step_handler(message, on_click)


# —Ñ—É–Ω–∫—Ü–∏—è, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏ –≤–≤–µ–¥–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫
def on_click(message):
    if message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        bot.send_message(message.chat.id, '–ë—É–¥—É —Ä–∞–¥ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å')
    elif message.text == '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è':
        bot.send_message(message.chat.id, register(message))
    elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç':
        bot.send_message(message.chat.id, site(message))


@bot.message_handler(commands=['site', 'website'])
def site(message):
    webbrowser.open('https://youtube.com')

# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ - —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def get_photo(message):
    # —Å–æ–∑–¥–∞–Ω–∏–µ inline –∫–Ω–æ–ø–∫–∏(–æ–∫–æ–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://youtube.com')
    # —Å–æ–∑–¥–∞–µ–º —Ä—è–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ', callback_data='delete')
    btn3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data='edit')
    markup.row(btn2, btn3)
    bot.reply_to(message, '–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ!', reply_markup=markup)

@bot.message_handler(commands=['register'])
def register(message):
    # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–¥
    conn = sqlite3.connect('bottg.sql')
    cur = conn.cursor()
    #–≤—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—É
    cur.execute('CREATE TABLE IF NOT EXISTS users(id int auto_increment primary key, name varchar(50), pass varchar(50))')
    #–∑–∞–ø–∏—Å—å –≤ –±–¥
    conn.commit()
    #–∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–≤—è–∑—å —Å –±–¥
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–±—è! –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')
    bot.register_next_step_handler(message, user_name)

def user_name(message):
    global name
    name = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:')
    bot.register_next_step_handler(message, user_pass)

def user_pass(message):
    password = message.text.strip()
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    conn = sqlite3.connect('bottg.sql')
    cur = conn.cursor()
    # –≤—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—É
    cur.execute("INSERT INTO users (name, pass) VALUES ('%s','%s')" %(name, password))
    # –∑–∞–ø–∏—Å—å –≤ –±–¥
    conn.commit()
    # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–≤—è–∑—å —Å –±–¥
    cur.close()
    conn.close()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='user'))
    bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!', reply_markup=markup)


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    conn = sqlite3.connect('bottg.sql')
    cur = conn.cursor()
    # –≤—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—É
    cur.execute("SELECT * FROM users")
    # —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –±–¥
    users = cur.fetchall()
    # —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫—É–¥–∞ –ø–æ–º–µ—Å—Ç–∏–º —Å–ø–∏—Å–æ–∫ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–¥
    info = ''
    for el in users:
        info += f'–ò–º—è: {el[1]}, –ø–∞—Ä–æ–ª—å: {el[2]}'
    # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–≤—è–∑—å —Å –±–¥
    cur.close()
    conn.close()
    bot.send_message(call.message.chat.id, info)



# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π callback_data
# func=lambda -–∞–Ω–æ–Ω–∏–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'delete':
        bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    elif callback.data == 'edit':
        bot.edit_message_text("Edit text", callback.message.chat.id, callback.message.message_id)


# –º–µ–Ω—é



# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ start
@bot.message_handler(commands=['start', 'hello'])
def main(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}')


@bot.message_handler(commands=['help'])
def main(message):
    bot.send_message(message.chat.id, '<b>Help</b> <em><u>information</u></em>', parse_mode='html')


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}')
        # –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'–í–∞—à ID: {message.from_user.id}')

'''
